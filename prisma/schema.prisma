generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Allergen {
    id String @id @default(uuid())

    name     String
    products Product[]
}

model Category {
    id String @id @default(uuid())

    name String
}

model Reservation {
    id String @id @default(uuid())

    createdAt DateTime @default(now())

    name           String
    phone          String
    numberOfGuests Int
    comment        String

    user   User   @relation(fields: [userId], references: [id])
    userId String

    desk   Desk   @relation(fields: [deskId], references: [id])
    deskId String

    checkInDate  DateTime  @default(now()) @map("check_in_date")
    checkOutDate DateTime? @map("check_out_date")
}

model Desk {
    id String @id @default(uuid())

    name        String
    capacity    Int
    description String
    rating      Int

    image   Image  @relation(fields: [imageId], references: [id])
    imageId String @unique

    reservations Reservation[]
}

model Image {
    id   String @id @default(uuid())
    name String
    data String

    width   Int
    height  Int
    product Product?
    desk    Desk?
}

model Ingredient {
    id   String @id @default(uuid())
    name String @unique

    products Product[]
}

model Product {
    id          String  @id @default(uuid())
    name        String
    price       Int
    isFood      Boolean
    description String
    image       Image   @relation(fields: [imageId], references: [id])
    imageId     String  @unique

    favorites   Favorite[]
    ingredients Ingredient[]
    allergens   Allergen[]
    cartItems   CartItem[]
}

model Favorite {
    product Product @relation(fields: [productId], references: [id])
    user    User    @relation(fields: [userId], references: [id])

    productId String
    userId    String

    @@id([productId, userId])
}

model User {
    id          String      @id @default(uuid())
    name        String
    email       String      @unique
    password    String
    phone       String?
    darkMode    Boolean     @default(false)
    paletteMode PaletteMode @default(DARK_BROWN)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    reservations Reservation[]
    favorites    Favorite[]
    cart         Cart?
}

enum PaletteMode {
    PINK
    DARK_BROWN
    DARK_BLUE
    LIGHT_BLUE
    PURPLE
    YELLOW
    GREEN
    GREY
}

model Cart {
    id     String     @id @default(uuid())
    user   User       @relation(fields: [userId], references: [id])
    userId String     @unique
    items  CartItem[]
}

model CartItem {
    id        String   @id @default(uuid())
    product   Product  @relation(fields: [productId], references: [id])
    productId String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    cart      Cart     @relation(fields: [cartId], references: [id])
    cartId    String
}

enum Status {
    ORDERED
    COOKED
    SERVED
}
